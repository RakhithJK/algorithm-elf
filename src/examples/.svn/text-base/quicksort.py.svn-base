# -*- coding: utf-8 -*-
#
# This script is generated by Algorithm Elf 1.2.1

import sys
import pascal
from aftype import DRIVER, datapool
from aftype import Char, Integer, Boolean, Real
from aftype import String, Array
from aftype import Enum, Set, Record, Pointer
from aftype import Queue, Tree, Indexpointer

first = Indexpointer()
first.declare()
last = Indexpointer()
last.declare()

class AlgorithmInstance(object):

    def __init__(self):
        qklist.declare()
        first.declare()
        last.declare()

    def qksort(self, r, s, t):
        DRIVER.simulate_function_call('qksort', 8, sys._getframe())
        r.frame = sys._getframe()
        s = s.clone()
        s.declare()
        t = t.clone()
        t.declare()
        result = None

        k = Indexpointer()
        k.declare()
        DRIVER.simulate_statement(11, sys._getframe())
        DRIVER.simulate_statement(12, sys._getframe())
        k.assign(Pointer(r))
        DRIVER.simulate_statement(13, sys._getframe())
        if s < t:
            DRIVER.simulate_statement(15, sys._getframe())
            _qkpass = self.qkpass(r, s, t, k)
            DRIVER.simulate_function_return()
            DRIVER.simulate_statement(15, sys._getframe())
            _qkpass
            DRIVER.simulate_statement(16, sys._getframe())
            _qksort = self.qksort(r, s, k - Integer(1))
            DRIVER.simulate_function_return()
            DRIVER.simulate_statement(16, sys._getframe())
            _qksort
            DRIVER.simulate_statement(17, sys._getframe())
            _qksort = self.qksort(r, k + Integer(1), t)
            DRIVER.simulate_function_return()
            DRIVER.simulate_statement(17, sys._getframe())
            _qksort
        DRIVER.simulate_statement(19, sys._getframe())

        r.frame = sys._getframe(1)
        s.destroy()
        t.destroy()

        k.destroy()

        return result

    def qkpass(self, r, s, t, i):
        DRIVER.simulate_function_call('qkpass', 21, sys._getframe())
        r.frame = sys._getframe()
        s = s.clone()
        s.declare()
        t = t.clone()
        t.declare()
        i.frame = sys._getframe()
        result = None

        j = Integer()
        j.declare()
        x = Integer()
        x.declare()
        rp = Integer()
        rp.declare()
        DRIVER.simulate_statement(26, sys._getframe())
        DRIVER.simulate_statement(27, sys._getframe())
        i.assign(s)
        DRIVER.simulate_statement(28, sys._getframe())
        j.assign(t)
        DRIVER.simulate_statement(29, sys._getframe())
        rp.assign(r[s])
        DRIVER.simulate_statement(30, sys._getframe())
        x.assign(r[s])
        DRIVER.simulate_statement(31, sys._getframe())
        while i < j:
            DRIVER.simulate_statement(33, sys._getframe())
            while i < j and r[j] >= x:
                DRIVER.simulate_statement(34, sys._getframe())
                j.assign(j - Integer(1))
            DRIVER.simulate_statement(35, sys._getframe())
            r[i].assign(r[j])
            DRIVER.simulate_statement(36, sys._getframe())
            while i < j and r[i] <= x:
                DRIVER.simulate_statement(37, sys._getframe())
                i.assign(i + Integer(1))
            DRIVER.simulate_statement(38, sys._getframe())
            r[j].assign(r[i])
        DRIVER.simulate_statement(40, sys._getframe())
        r[i].assign(rp)
        DRIVER.simulate_statement(41, sys._getframe())

        r.frame = sys._getframe(1)
        s.destroy()
        t.destroy()
        i.frame = sys._getframe(1)

        j.destroy()
        x.destroy()
        rp.destroy()

        return result

    def run(self):
        DRIVER.simulate_program_entry('quicksort', 43)
        DRIVER.simulate_statement(44, sys._getframe())
        first.assign(Pointer(qklist))
        DRIVER.simulate_statement(44, sys._getframe())
        last.assign(Pointer(qklist))
        DRIVER.simulate_statement(45, sys._getframe())
        first.assign(pascal.low(qklist))
        DRIVER.simulate_statement(45, sys._getframe())
        last.assign(pascal.high(qklist))
        DRIVER.simulate_statement(46, sys._getframe())
        _qksort = self.qksort(qklist, first, last)
        DRIVER.simulate_function_return()
        DRIVER.simulate_statement(46, sys._getframe())
        _qksort
        DRIVER.simulate_statement(47, sys._getframe())

def init():
    vlist = []
    global qklist
    vlist.append(('qklist', 'Queue'))
    qklist = datapool('qklist', 'Queue')

    return vlist
var_list = init()

# End of Class quicksortAlgorithm
