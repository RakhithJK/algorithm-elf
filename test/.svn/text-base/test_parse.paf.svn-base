{ 
  测试基本的语句解析。
}

procedure myalgorithm(x:Integer);
begin
end;

procedure myfunc1();
begin
end;

procedure myfunc2(x:Integer);
begin
end;

procedure myfunc3(var x:Integer);
begin
end;

procedure myfunc4(x1, x2:Integer);
begin
end;

procedure myfunc5(x1:Integer, x2:Char, x3:Real, x4:String);
begin
end;

procedure myfunc6(var x1:Integer, x2:Char, var x3:Real, x4:String);
begin
    exit;
end;

function myfunc7(x:integer):integer;
begin
    Result := 1;
end;

function myfunc8(X:integer, var X2:CHAR):integer;
begin
    result := 1;
end;

procedure myfunc9();

const
  c1 = 5;
  c2: integer = 10;
  c3: char = 'x';
  c4: string = 'paf';
  C5: string = '';
  c6: real = 1.20;
  c7: boolean = false;
  c8: boolean = true;

type
  myint = Integer;
  pint = ^integer;
  tarray = array of integer;
  tarray2 = array [0..10] of integer;
  tarray3 = array [2..5] of integer;
  mystring = string;
  myrecord = record of
          name: string;
          age: integer;
      end;
  precord = ^myrecord;
  parray = tarray;

var
 v1: integer;
 v2: myint;
 v3: char;
 v4: string;
 v5: real;
 v6: boolean;
 v7: array of integer;
 v8: array [0..10] of integer;
 v9: tarray;
 v10: myrecord;
 v11: ^Integer;
 v12: ^myrecord;
 v13: ^real;
 v14: precord;

begin
   {{+a,-a,*a,a=b,[a],a,<a>,(a)}}
    v1 := 0;
    v1 := 2;
    v2 := 3;
    v3 := 'x';
    v4 := 'i"m string';
    v5 := 2.4;
    v6 := true;
    v6 := false;
    setlength(v7, 10);
    v7[0] := 2;
    v8[1] := 3;
    v10.name := 'jondy';
    v11 := nil;
    v12^.name := 'jin';
    v13^ := 239.4;
    
    v1 := v2 + v3 * v4 / v5 + (v6 - v7);
    x2 := v2 and v3 or v4 and not v5;
    x4 := v2 in v3;
    x5 := v3 >= v6 and v4 <= v7 and v8 > v9 and v10 < v11;
    x6 := v4 <> v5;

    if v0 = 1 then v1 := 2;

    if v0 = 1 then
      v1 := 2
    else
      v1 := 3;

    if v1 = 0 then
    begin
      v1 := 2;
      v2 := 3;
    end
    else
    begin
      v1 := 3;
      v2 := 4;
    end;

    while v5 > v6 do
     v1 := 7;

    while v5 > v6 do
    begin
      v1 := 8;
      v2 := 9;
    end;

    for i := 0 to 10 do
      k := k + 1;
    for i := 1 to 10 do
    begin
      K := K +1;
      J := j -1;
    end;

    repeat
      i := i + 1;
    until i > 10;

    case i of
      0: k := 1;
      1: begin
          k := 2;
	  j := 3;
	 end
      else
         k := 0;
    end;
    case i of
     0: k := 1;
     else
         begin
	   K := 0;
	   j := 1;
	 end
     end;
     
    setlength(a, 10);
    myfunc();
    myfunc(a,b,c);
    i := myfunc();
    i := k + myfunc();
    i := k + myfunc(a, b, c);
end;
